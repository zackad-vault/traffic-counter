{"version":3,"sources":["icons/arrow_drop_down.svg","icons/arrow_drop_up.svg","icons/arrow_left.svg","icons/arrow_right.svg","icons/screen_rotation.svg","components/Counter/CounterButton.jsx","components/Counter/CounterRow.jsx","components/Counter/Counter.jsx","components/Setting/SettingPanel.jsx","components/Setting/Setting.jsx","App.jsx","registerServiceWorker.js","index.js"],"names":["module","exports","CounterButton","state","value","clickHandler","setState","this","props","reset","onClick","className","React","Component","CounterRow","button","index","row","key","orientation","Counter","resetHandler","bind","counter","column","SettingPanel","reduceColumn","src","ArrowLeft","alt","addColumn","ArrowRight","reduceRow","ArrowDown","addRow","ArrowUp","ScreenRotation","Setting","App","maxColumn","set","then","maxRow","get","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.783e8f02.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow_drop_down.f131b3f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow_drop_up.ec692b43.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow_left.792f5fff.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow_right.133b4d63.svg\";","module.exports = __webpack_public_path__ + \"static/media/screen_rotation.5e5469a1.svg\";","import React from \"react\"\nimport './Counter.css'\n\nclass CounterButton extends React.Component {\n  state = {\n    value: 0\n  }\n\n  clickHandler = () => {\n    this.setState({ value: this.state.value + 1 })\n  }\n\n  componentWillReceiveProps() {\n    if (this.props.reset) {\n      this.setState({value: 0})\n    }\n  }\n\n  render() {\n    return (\n      <button onClick={this.clickHandler} className=\"counter__button\">\n        {this.state.value}\n      </button>\n    )\n  }\n}\n\nexport default CounterButton\n","import React from 'react'\nimport CounterButton from './CounterButton'\n\nclass CounterRow extends React.Component {\n  state = {\n    reset: false\n  }\n\n  componentWillReceiveProps() {\n    this.setState({reset: this.props.reset})\n  }\n\n  render() {\n    let button = []\n\n    for (let index = 0; index < this.props.row; index++) {\n      button[index] = <CounterButton key={index} reset={this.state.reset} />\n    }\n    return (\n      <div className={this.props.orientation}>\n        {button}\n      </div>\n    )\n  }\n}\n\nexport default CounterRow\n","import React from 'react'\nimport CounterRow from './CounterRow'\n\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.resetHandler = this.resetHandler.bind(this)\n  }\n\n  state = {\n    reset: false,\n    orientation: \"portrait\"\n  }\n\n  resetHandler = () => {\n    this.setState({reset: true})\n  }\n\n  render() {\n    let counter = []\n\n    for (let index = 0; index < this.props.row; index++) {\n      counter[index] = <CounterRow row={this.props.column} key={index} reset={this.state.reset} orientation={this.state.orientation} />\n    }\n\n    return (\n      <div className={'counter ' + this.state.orientation}>\n        <button onClick={this.resetHandler}>Reset</button>\n        {counter}\n      </div>\n    )\n  }\n}\n\nexport default Counter\n","import React from 'react'\nimport ArrowDown from '../../icons/arrow_drop_down.svg'\nimport ArrowUp from '../../icons/arrow_drop_up.svg'\nimport ArrowLeft from '../../icons/arrow_left.svg'\nimport ArrowRight from '../../icons/arrow_right.svg'\nimport ScreenRotation from '../../icons/screen_rotation.svg'\n\nclass SettingPanel extends React.Component {\n  render() {\n    return (\n      <div className=\"setting__bar\">\n        <button className=\"reduce\" onClick={this.props.reduceColumn}><img src={ArrowLeft} alt=\"Reduce Column\" /></button>\n        <span>{this.props.column}</span>\n        <button className=\"add\" onClick={this.props.addColumn}><img src={ArrowRight} alt=\"Add Column\" /></button>\n        <button className=\"reduce\" onClick={this.props.reduceRow}><img src={ArrowDown} alt=\"Reduce Row\" /></button>\n        <span>{this.props.row}</span>\n        <button className=\"add\" onClick={this.props.addRow}><img src={ArrowUp} alt=\"Add Row\" /></button>\n        <button><img src={ScreenRotation} alt=\"Chane Orientation\" /></button>\n      </div>\n    )\n  }\n}\n\nexport default SettingPanel\n","import React from 'react'\nimport SettingPanel from './SettingPanel'\nimport './Setting.css'\n\nclass Setting extends React.Component {\n  render() {\n    return(\n      <div>\n        <SettingPanel\n          column={this.props.column}\n          addColumn={this.props.addColumn}\n          reduceColumn={this.props.reduceColumn}\n          row={this.props.row}\n          addRow={this.props.addRow}\n          reduceRow={this.props.reduceRow} />\n      </div>\n    )\n  }\n}\n\nexport default Setting\n","import React, { Component } from 'react'\nimport { set, get } from 'idb-keyval'\nimport './App.css'\nimport Counter from './components/Counter/Counter'\nimport Setting from './components/Setting/Setting'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.addColumn = this.addColumn.bind(this)\n    this.reduceColumn = this.reduceColumn.bind(this)\n    this.addRow = this.addRow.bind(this)\n    this.reduceRow = this.reduceRow.bind(this)\n    this.maxColumn = 12\n    this.maxRow = 12\n  }\n\n  state = {\n    column: 1,\n    row: 1\n  }\n\n  componentDidMount() {\n    get('column').then(value => {\n      if (value) {\n        this.setState({ column: value })\n      }\n    })\n    get('row').then(value => {\n      if (value) {\n        this.setState({ row: value })\n      }\n    })\n  }\n\n  addColumn = () => {\n    let column = (this.state.column < this.maxColumn) ? this.state.column + 1 : this.maxColumn\n    set('column', column).then(this.setState({ column: column }))\n  }\n\n  reduceColumn = () => {\n    let column = (this.state.column > 1) ? this.state.column - 1 : 1\n    set('column', column).then(this.setState({ column: column }))\n  }\n\n  addRow = () => {\n    let row = (this.state.row < this.maxRow) ? this.state.row + 1 : this.maxRow\n    set('row', row).then(this.setState({ row: row }))\n  }\n\n  reduceRow = () => {\n    let row = (this.state.row > 1) ? this.state.row - 1 : 1\n    set('row', row).then(this.setState({ row: row }))\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Setting\n          column={this.state.column}\n          addColumn={this.addColumn}\n          reduceColumn={this.reduceColumn}\n          row={this.state.row}\n          addRow={this.addRow}\n          reduceRow={this.reduceRow} />\n        <Counter column={this.state.column} row={this.state.row} />\n      </div>\n    )\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport registerServiceWorker from './registerServiceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\nregisterServiceWorker()\n"],"sourceRoot":""}